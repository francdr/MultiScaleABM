n_initial_infected = 10
)
# Check viral load trajectory. If spaghetti=T, plot N stochastic trajectories
plot_viral_load_trajectory(params = params, spaghetti = T, N=100)
plot_viral_load_trajectory(params = params, spaghetti = T, N=100)
plot_viral_load_trajectory(params = params, spaghetti = T, N=100)
plot_viral_load_trajectory(params = params, spaghetti = T, N=100)
# Define the parameters for the ABM
params <- list(
n_agents = 1e4,
n_days = 180,
contact_matrix = matrix(c(0.1, 0.05, 0.01,
0.05, 0.1, 0.02,
0.01, 0.02, 0.1),
nrow = 3, byrow = TRUE),
age_groups = c(0.2, 0.5, 0.3),
k = c(0.05, 0.05, 0.05),
gamma = c(0.3, 0.3, 0.3),
sigma = c(0.25, 0.25, 0.25),
beta = 10,
dt = 0.0005,
VL_days = 20,
V0 = log(0.01),
dV0 = 10,
recovery_rate = 0.1,
n_initial_infected = 10
)
# Check viral load trajectory. If spaghetti=T, plot N stochastic trajectories
plot_viral_load_trajectory(params = params, spaghetti = T, N=100)
plot_viral_load_trajectory(params = params, spaghetti = T, N=100)
devtools::build_readme()
devtools::build_readme()
devtools::install()
devtools::build_readme()
devtools::build_readme()
devtools::build_readme()
params <- list(
n_agents = 1e4,
n_days = 180,
contact_matrix = matrix(c(0.1, 0.05, 0.01,
0.05, 0.1, 0.02,
0.01, 0.02, 0.1),
nrow = 3, byrow = TRUE),
age_groups = c(0.2, 0.5, 0.3),
k = c(0.05, 0.05, 0.05),
gamma = c(0.3, 0.3, 0.3),
sigma = c(0.25, 0.25, 0.25),
beta = 10,
dt = 0.0005,
VL_days = 20,
V0 = log(0.01),
dV0 = 10,
recovery_rate = 0.1,
n_initial_infected = 10
)
out <- run_abm(params)
library(MultiScaleABM)
params <- list(
n_agents = 1e4,
n_days = 180,
contact_matrix = matrix(c(0.1, 0.05, 0.01,
0.05, 0.1, 0.02,
0.01, 0.02, 0.1),
nrow = 3, byrow = TRUE),
age_groups = c(0.2, 0.5, 0.3),
k = c(0.05, 0.05, 0.05),
gamma = c(0.3, 0.3, 0.3),
sigma = c(0.25, 0.25, 0.25),
beta = 10,
dt = 0.0005,
VL_days = 20,
V0 = log(0.01),
dV0 = 10,
recovery_rate = 0.1,
n_initial_infected = 10
)
out <- run_abm(params)
params <- list(
n_agents = 1e4,
n_days = 180,
contact_matrix = matrix(c(0.1, 0.05, 0.01,
0.05, 0.1, 0.02,
0.01, 0.02, 0.1),
nrow = 3, byrow = TRUE),
age_groups = c(0.2, 0.5, 0.3),
k = c(0.05, 0.05, 0.05),
gamma = c(0.3, 0.3, 0.3),
sigma = c(0.25, 0.25, 0.25),
beta = 10,
dt = 0.0005,
VL_days = 20,
V0 = log(0.01),
dV0 = 10,
recovery_rate = 0.1,
n_initial_infected = 10
)
out <- run_abm(params)
library(MultiScaleABM)
library(ggplot2)
# Define the parameters for the ABM
params <- list(
n_agents = 1e4,
n_days = 180,
contact_matrix = matrix(c(0.1, 0.05, 0.01,
0.05, 0.1, 0.02,
0.01, 0.02, 0.1),
nrow = 3, byrow = TRUE),
age_groups = c(0.2, 0.5, 0.3),
k = c(0.05, 0.05, 0.05),
gamma = c(0.3, 0.3, 0.3),
sigma = c(0.25, 0.25, 0.25),
beta = 10,
dt = 0.0005,
VL_days = 20,
V0 = log(0.01),
dV0 = 10,
recovery_rate = 0.1,
n_initial_infected = 10
)
# Check viral load trajectory. If spaghetti=T, plot N stochastic trajectories
plot_viral_load_trajec
library(MultiScaleABM)
library(ggplot2)
# Define the parameters for the ABM
params <- list(
n_agents = 1e4,
n_days = 180,
contact_matrix = matrix(c(0.1, 0.05, 0.01,
0.05, 0.1, 0.02,
0.01, 0.02, 0.1),
nrow = 3, byrow = TRUE),
age_groups = c(0.2, 0.5, 0.3),
k = c(0.05, 0.05, 0.05),
gamma = c(0.3, 0.3, 0.3),
sigma = c(0.25, 0.25, 0.25),
beta = 10,
dt = 0.0005,
VL_days = 20,
V0 = log(0.01),
dV0 = 10,
recovery_rate = 0.1,
n_initial_infected = 10
)
# Check viral load trajectory. If spaghetti=T, plot N stochastic trajectories
plot_viral_load_trajectory(params = params, spaghetti = T, N=100)
library(MultiScaleABM)
library(ggplot2)
# Define the parameters for the ABM
params <- list(
n_agents = 1e4,
n_days = 180,
contact_matrix = matrix(c(0.1, 0.05, 0.01,
0.05, 0.1, 0.02,
0.01, 0.02, 0.1),
nrow = 3, byrow = TRUE),
age_groups = c(0.2, 0.5, 0.3),
k = c(0.05, 0.05, 0.05),
gamma = c(0.3, 0.3, 0.3),
sigma = c(0.25, 0.25, 0.25),
beta = 10,
dt = 0.0005,
VL_days = 20,
V0 = log(0.01),
dV0 = 10,
recovery_rate = 0.1,
n_initial_infected = 10
)
# Check viral load trajectory. If spaghetti=T, plot N stochastic trajectories
plot_viral_load_trajectory(params = params, spaghetti = T, N=100)
library(MultiScaleABM)
library(ggplot2)
# Define the parameters for the ABM
params <- list(
n_agents = 1e4,
n_days = 180,
contact_matrix = matrix(c(0.1, 0.05, 0.01,
0.05, 0.1, 0.02,
0.01, 0.02, 0.1),
nrow = 3, byrow = TRUE),
age_groups = c(0.2, 0.5, 0.3),
k = c(0.05, 0.05, 0.05),
gamma = c(0.3, 0.3, 0.3),
sigma = c(0.25, 0.25, 0.25),
beta = 10,
dt = 0.0005,
VL_days = 20,
V0 = log(0.01),
dV0 = 10,
recovery_rate = 0.1,
n_initial_infected = 10
)
# Check viral load trajectory. If spaghetti=T, plot N stochastic trajectories
plot_viral_load_trajectory(params = params, spaghetti = T, N=100)
library(MultiScaleABM)
library(ggplot2)
# Define the parameters for the ABM
params <- list(
n_agents = 1e4,
n_days = 180,
contact_matrix = matrix(c(0.1, 0.05, 0.01,
0.05, 0.1, 0.02,
0.01, 0.02, 0.1),
nrow = 3, byrow = TRUE),
age_groups = c(0.2, 0.5, 0.3),
k = c(0.05, 0.05, 0.05),
gamma = c(0.3, 0.3, 0.3),
sigma = c(0.25, 0.25, 0.25),
beta = 10,
dt = 0.0005,
VL_days = 20,
V0 = log(0.01),
dV0 = 10,
recovery_rate = 0.1,
n_initial_infected = 10
)
# Check viral load trajectory. If spaghetti=T, plot N stochastic trajectories
plot_viral_load_trajectory(params = params, spaghetti = T, N=100)
library(MultiScaleABM)
library(ggplot2)
# Define the parameters for the ABM
params <- list(
n_agents = 1e4,
n_days = 180,
contact_matrix = matrix(c(0.1, 0.05, 0.01,
0.05, 0.1, 0.02,
0.01, 0.02, 0.1),
nrow = 3, byrow = TRUE),
age_groups = c(0.2, 0.5, 0.3),
k = c(0.05, 0.05, 0.05),
gamma = c(0.3, 0.3, 0.3),
sigma = c(0.25, 0.25, 0.25),
beta = 10,
dt = 0.0005,
VL_days = 20,
V0 = log(0.01),
dV0 = 10,
recovery_rate = 0.1,
n_initial_infected = 10
)
# Check viral load trajectory. If spaghetti=T, plot N stochastic trajectories
plot_viral_load_trajectory(params = params, spaghetti = T, N=100)
library(MultiScaleABM)
library(ggplot2)
# Define the parameters for the ABM
params <- list(
n_agents = 1e4,
n_days = 180,
contact_matrix = matrix(c(0.1, 0.05, 0.01,
0.05, 0.1, 0.02,
0.01, 0.02, 0.1),
nrow = 3, byrow = TRUE),
age_groups = c(0.2, 0.5, 0.3),
k = c(0.05, 0.05, 0.05),
gamma = c(0.3, 0.3, 0.3),
sigma = c(0.25, 0.25, 0.25),
beta = 10,
dt = 0.0005,
VL_days = 20,
V0 = log(0.01),
dV0 = 10,
recovery_rate = 0.1,
n_initial_infected = 10
)
# Check viral load trajectory. If spaghetti=T, plot N stochastic trajectories
plot_viral_load_trajectory(params = params, spaghetti = T, N=100)
library(MultiScaleABM)
library(ggplot2)
# Define the parameters for the ABM
params <- list(
n_agents = 1e4,
n_days = 180,
contact_matrix = matrix(c(0.1, 0.05, 0.01,
0.05, 0.1, 0.02,
0.01, 0.02, 0.1),
nrow = 3, byrow = TRUE),
age_groups = c(0.2, 0.5, 0.3),
k = c(0.05, 0.05, 0.05),
gamma = c(0.3, 0.3, 0.3),
sigma = c(0.25, 0.25, 0.25),
beta = 10,
dt = 0.0005,
VL_days = 20,
V0 = log(0.01),
dV0 = 10,
recovery_rate = 0.1,
n_initial_infected = 10
)
# Check viral load trajectory. If spaghetti=T, plot N stochastic trajectories
plot_viral_load_trajectory(params = params, spaghetti = T, N=100)
library(MultiScaleABM)
library(ggplot2)
# Define the parameters for the ABM
params <- list(
n_agents = 1e4,
n_days = 180,
contact_matrix = matrix(c(0.1, 0.05, 0.01,
0.05, 0.1, 0.02,
0.01, 0.02, 0.1),
nrow = 3, byrow = TRUE),
age_groups = c(0.2, 0.5, 0.3),
k = c(0.05, 0.05, 0.05),
gamma = c(0.3, 0.3, 0.3),
sigma = c(0.25, 0.25, 0.25),
beta = 10,
dt = 0.0005,
VL_days = 20,
V0 = log(0.01),
dV0 = 10,
recovery_rate = 0.1,
n_initial_infected = 10
)
# Check viral load trajectory. If spaghetti=T, plot N stochastic trajectories
plot_viral_load_trajectory(params = params, spaghetti = T, N=100)
library(MultiScaleABM)
library(ggplot2)
# Define the parameters for the ABM
params <- list(
n_agents = 1e4,
n_days = 180,
contact_matrix = matrix(c(0.1, 0.05, 0.01,
0.05, 0.1, 0.02,
0.01, 0.02, 0.1),
nrow = 3, byrow = TRUE),
age_groups = c(0.2, 0.5, 0.3),
k = c(0.05, 0.05, 0.05),
gamma = c(0.3, 0.3, 0.3),
sigma = c(0.25, 0.25, 0.25),
beta = 10,
dt = 0.0005,
VL_days = 20,
V0 = log(0.01),
dV0 = 10,
recovery_rate = 0.1,
n_initial_infected = 10
)
# Check viral load trajectory. If spaghetti=T, plot N stochastic trajectories
plot_viral_load_trajectory(params = params, spaghetti = T, N=100)
# Run the agent-based model
out <- run_abm(params)
params <- list(
n_agents = 1e4,
n_days = 180,
contact_matrix = matrix(c(0.1, 0.05, 0.01,
0.05, 0.1, 0.02,
0.01, 0.02, 0.1),
nrow = 3, byrow = TRUE),
age_groups = c(0.2, 0.5, 0.3),
k = c(0.05, 0.05, 0.05),
gamma = c(0.3, 0.3, 0.3),
sigma = c(0.25, 0.25, 0.25),
beta = 10,
dt = 0.0005,
VL_days = 20,
V0 = log(0.01),
dV0 = 10,
recovery_rate = 0.1,
n_initial_infected = 10
)
out <- run_abm(params)
out <- run_abm(params)
plot(out$daily_infected, type = "l", col = "red", main = "Daily Infected", ylab = "Count")
```
plot(out$daily_infected, type = "l", col = "red", main = "Daily Infected", ylab = "Count")
devtools::build_readme()
library(shiny)
library(MultiScaleABM)
ui <- fluidPage(
titlePanel("Viral Load Trajectory Explorer"),
sidebarLayout(
sidebarPanel(
sliderInput("k", "Stiffness (k):", min = 0.01, max = 50, value = 5, step = 0.01),
sliderInput("gamma", "Damping (gamma):", min = 0.01, max = 200, value = 120, step = 0.01),
sliderInput("sigma", "Noise (sigma):", min = 0.001, max = 5, value = 1, step = 0.01),
sliderInput("V0", "Initial log viral load (V0):", min = -10, max = 2, value = log(0.1), step = 0.1),
sliderInput("dV0", "Initial rate of change (dV0):", min = -10, max = 10, value = 3, step = 0.1)
),
mainPanel(
plotOutput("trajectoryPlot"),
verbatimTextOutput("paramText")
)
)
)
server <- function(input, output) {
output$trajectoryPlot <- renderPlot({
n_runs <- 50  # number of trajectories
n_days <- 40  # as in VL_days
dt <- 0.0005
results <- matrix(NA, nrow = n_days, ncol = n_runs)
# Base parameters
params <- list(
n_agents = 1e4,
n_days = 180,
contact_matrix = matrix(c(0.1, 0.05, 0.01,
0.05, 0.1, 0.02,
0.01, 0.02, 0.1),
nrow = 3, byrow = TRUE),
age_groups = c(0.2, 0.5, 0.3),
k = rep(input$k, 3),
gamma = rep(input$gamma, 3),
sigma = rep(input$sigma, 3),
beta = 10,
dt = dt,
VL_days = n_days,
V0 = input$V0,
dV0 = input$dV0,
recovery_rate = 0.1,
n_initial_infected = 10
)
# Run multiple simulations
for (i in 1:n_runs) {
results[, i] <- simulate_viral_load(
days = n_days,
dt = dt,
V0 = input$V0,
dV0 = input$dV0,
k = input$k,
gamma = input$gamma,
sigma = input$sigma
)
}
# Plot all trajectories
matplot(results, type = "l", lty = 1, col = adjustcolor("black", alpha.f = 0.2),
main = paste("Spaghetti Plot of", n_runs, "Viral Load Trajectories"),
xlab = "Day", ylab = "Normalized Viral Load")
})
output$paramText <- renderPrint({
cat("Current Parameters:\n")
cat("k     =", input$k, "\n")
cat("gamma =", input$gamma, "\n")
cat("sigma =", input$sigma, "\n")
cat("V0    =", input$V0, "\n")
cat("dV0   =", input$dV0, "\n")
})
}
shinyApp(ui = ui, server = server)
devtools::clean_dll()
devtools::document()
# Define the parameters for the ABM
params <- list(
n_agents = 1e4,
n_days = 180,
contact_matrix = matrix(c(0.1, 0.05, 0.01,
0.05, 0.1, 0.02,
0.01, 0.02, 0.1),
nrow = 3, byrow = TRUE),
age_groups = c(0.2, 0.5, 0.3),
k = c(0.05, 0.05, 0.05),
gamma = c(0.3, 0.3, 0.3),
sigma = c(0.25, 0.25, 0.25),
beta = 10,
dt = 0.0005,
VL_days = 20,
V0 = log(0.01),
dV0 = 10,
recovery_rate = 0.1,
n_initial_infected = 10,
parallel  = TRUE
)
# Run the agent-based model
out <- run_abm(params)
# Define the parameters for the ABM
params <- list(
n_agents = 1e4,
n_days = 180,
contact_matrix = matrix(c(0.1, 0.05, 0.01,
0.05, 0.1, 0.02,
0.01, 0.02, 0.1),
nrow = 3, byrow = TRUE),
age_groups = c(0.2, 0.5, 0.3),
k = c(0.05, 0.05, 0.05),
gamma = c(0.3, 0.3, 0.3),
sigma = c(0.25, 0.25, 0.25),
beta = 10,
dt = 0.0005,
VL_days = 20,
V0 = log(0.01),
dV0 = 10,
recovery_rate = 0.1,
n_initial_infected = 10,
parallel  = TRUE
)
# Check viral load trajectory. If spaghetti=T, plot N stochastic trajectories
plot_viral_load_trajectory(params = params, spaghetti = T, N=100)
# Run the agent-based model
out <- run_abm(params)
library(MultiScaleABM)
library(ggplot2)
# Define the parameters for the ABM
params <- list(
n_agents = 1e4,
n_days = 180,
contact_matrix = matrix(c(0.1, 0.05, 0.01,
0.05, 0.1, 0.02,
0.01, 0.02, 0.1),
nrow = 3, byrow = TRUE),
age_groups = c(0.2, 0.5, 0.3),
k = c(0.05, 0.05, 0.05),
gamma = c(0.3, 0.3, 0.3),
sigma = c(0.25, 0.25, 0.25),
beta = 10,
dt = 0.0005,
VL_days = 20,
V0 = log(0.01),
dV0 = 10,
recovery_rate = 0.1,
n_initial_infected = 10,
parallel  = TRUE
)
# Check viral load trajectory. If spaghetti=T, plot N stochastic trajectories
plot_viral_load_trajectory(params = params, spaghetti = T, N=100)
# Run the agent-based model
out <- run_abm(params)
